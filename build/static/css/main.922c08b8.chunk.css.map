{"version":3,"sources":["webpack://src/assets/libraries/sass-flexbox-grid/_grid.scss","webpack://src/assets/libraries/sass-flexbox-grid/mixins/_grid-mixins.scss","webpack://src/assets/libraries/sass-flexbox-grid/variables/_grid-variables.scss","webpack://src/assets/libraries/sass-flexbox-grid/_visibility.scss","webpack://src/styles/base/_fonts.scss","webpack://src/styles/base/_variables.scss","webpack://src/styles/base/_mixins.scss","webpack://src/styles/layout/_header.scss","webpack://src/styles/layout/_main.scss","webpack://src/styles/layout/_footer.scss","webpack://src/styles/components/_menu.scss","webpack://src/styles/components/_hero.scss","webpack://src/styles/components/_slick.scss","webpack://src/styles/elements/_buttons.scss","webpack://src/styles/elements/_loading.scss"],"names":[],"mappings":"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","file":"main.922c08b8.chunk.css","sourcesContent":["// Creds to https://github.com/kristoferjoseph/flexboxgrid\n// No gutters\n// No text alignment with justified container classes (center-xs, for example)\n\n.row {\n  @include row();\n}\n\n.row.reverse {\n  @include row-reverse();\n}\n\n.row.natural-height {\n  @include row-natural-height();\n}\n\n.row.flex-column {\n  @include row-flex-column();\n}\n\n.col {\n  @include col();\n}\n\n.col.reverse {\n  @include col-reverse();\n}\n\n.first {\n  order: -1;\n}\n\n.last {\n  order: 1;\n}\n\n.align-start {\n  align-self: flex-start;\n}\n\n.align-end {\n  align-self: flex-end;\n}\n\n.align-center {\n  align-self: center;\n}\n\n.align-baseline {\n  align-self: baseline;\n}\n\n.align-stretch {\n    align-self: stretch;\n}\n\n// Mixin to run inside of for loop - creates col/breakpoint classes * Not for developer use *\n@mixin col-factory($thisPrefix) {\n  .col-#{$thisPrefix} {\n    box-sizing: border-box;\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n    padding: $gutter;\n  }\n  @for $i from 1 through $grid-columns {\n    .col-#{$thisPrefix}-#{$i} {\n      box-sizing: border-box;\n      flex-basis: 100% / $grid-columns * $i;\n      max-width: 100% / $grid-columns * $i;\n      padding: $gutter;\n    }\n    .col-#{$thisPrefix}-offset-#{$i} {\n      margin-left: 100% / $grid-columns * $i;\n    }\n  }\n  .row.start-#{$thisPrefix} {\n    justify-content: flex-start;\n  }\n  .row.center-#{$thisPrefix} {\n    justify-content: center;\n  }\n  .row.end-#{$thisPrefix} {\n    justify-content: flex-end;\n  }\n  .row.top-#{$thisPrefix} {\n    align-items: flex-start;\n  }\n  .row.middle-#{$thisPrefix} {\n    align-items: center;\n  }\n  .row.bottom-#{$thisPrefix} {\n    align-items: flex-end;\n  }\n  .row.around-#{$thisPrefix} {\n    justify-content: space-around;\n  }\n  .row.between-#{$thisPrefix} {\n    justify-content: space-between;\n  }\n  .first-#{$thisPrefix} {\n    order: -1;\n  }\n  .last-#{$thisPrefix} {\n    order: 1;\n  }\n  .col-no-gutter-left-#{$thisPrefix} {\n    padding-left: 0 !important;\n  }\n\n  .col-no-gutter-right-#{$thisPrefix} {\n    padding-right: 0 !important;\n  }\n} // Mixin to run inside of for loop - creates col/breakpoint classes\n\n@for $i from 1 through length($breakpoint-up-prefixes) {\n  $thisPrefix: nth($breakpoint-up-prefixes, $i);\n  @if $thisPrefix == \"xs\" {\n    @include col-factory($thisPrefix);\n  } @else if $thisPrefix == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      @include col-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"md\" {\n    @media #{$breakpoint-md-up} {\n      @include col-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      @include col-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      @include col-factory($thisPrefix);\n    }\n  }\n}\n\n.col-gutter-lr {\n    padding: 0 $gutter;\n}\n\n.col-no-gutter {\n    padding: 0;\n}\n","@mixin row($full-width: \"false\") {\n  box-sizing: border-box;\n  margin: 0 auto;\n  width: 100%;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  flex: 0 1 auto;\n  flex-direction: row;\n  flex-wrap: wrap;\n  // // Overrides flexbox's default behavior of making all children equal height\n  // align-items: flex-start; // If this was not in place it would require two classes to make a row full of unequal height columns aligned top, middle, bottom\n  @if type-of($content-well-max-width) == number and $content-well-max-width != 0 and $full-width == \"false\"{\n    max-width: $content-well-max-width;\n  }\n}\n\n@mixin row-reverse() {\n  flex-direction: row-reverse;\n}\n\n@mixin row-natural-height() {\n  align-items: flex-start;\n}\n\n@mixin row-flex-column() {\n  flex-direction: column;\n}\n\n@mixin col-reverse() {\n  flex-direction: column-reverse;\n}\n\n// Condition to run inside of the col mixin * not for developer use *\n@mixin col-condition($col-number) {\n  @if type-of($col-number) == number {\n    @if $col-number > $grid-columns or $col-number == 0 {\n      @warn \"Column number must be greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\n    } @else {\n      box-sizing: border-box;\n      flex-basis: 100% / $grid-columns * $col-number;\n      max-width: 100% / $grid-columns * $col-number;\n      padding: $gutter;\n    }\n  // If no col number is passed then arg is set to \"auto\" by default\n  // \"auto\" mode fills the horizontal space with evenly sized containers\n  } @else if $col-number == \"auto\" {\n    box-sizing: border-box;\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n    padding: $gutter;\n  } @else {\n    @warn \"Column number argument must either be the string 'auto' or a number greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\n  }\n} // Condition to run inside of the col mixin * not for developer use *\n\n@mixin col($breakpoint: \"xs\", $col-number: \"auto\") {\n  // If no breakpoint is passed and a col number is just use the first arg as the col number and act like xs\n  @if type-of($breakpoint) == number {\n    $col-number: $breakpoint;\n    @include col-condition($col-number);\n  } @else if $breakpoint == \"xs\" {\n    @include col-condition($col-number);\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      @include col-condition($col-number);\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      @include col-condition($col-number);\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      @include col-condition($col-number);\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      @include col-condition($col-number);\n    }\n  } @else {\n    @warn \"col mixin requires one of the existing breakpoint prefixes (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n// Condition to run inside of the col-offset mixin * not for developer use *\n@mixin col-offset-condition($offset-number) {\n  @if type-of($offset-number) != number {\n    @warn \"Column offset number must be a number (only arg or second arg in the col mixin)\";\n  } @else if $offset-number == 0 {\n    @warn \"Column offset number must be greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\n  } @else if $offset-number > $grid-columns {\n    @warn \"Column offset number must be greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\n  } @else {\n    margin-left: 100% / $grid-columns * $offset-number;\n  }\n} // Condition to run inside of the col-offset mixin * not for developer use *\n\n@mixin col-offset($breakpoint: \"xs\", $offset-number: 0) {\n  // If no breakpoint is passed and a col number is just use the first arg as the col number and act like xs\n  @if type-of($breakpoint) == number {\n    $offset-number: $breakpoint;\n    @include col-offset-condition($offset-number);\n  } @else if $breakpoint == \"xs\" {\n    @include col-offset-condition($offset-number);\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      @include col-offset-condition($offset-number);\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      @include col-offset-condition($offset-number);\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      @include col-offset-condition($offset-number);\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      @include col-offset-condition($offset-number);\n    }\n  } @else {\n    @warn \"col mixin requires one of the existing breakpoint prefixes (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin start($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: flex-start;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: flex-start;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: flex-start;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: flex-start;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: flex-start;\n    }\n  } @else {\n    @warn \"start mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin center($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: center;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: center;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: center;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: center;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: center;\n    }\n  } @else {\n    @warn \"center mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin end($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: flex-end;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: flex-end;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: flex-end;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: flex-end;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: flex-end;\n    }\n  } @else {\n    @warn \"end mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin top($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    align-items: flex-start;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      align-items: flex-start;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      align-items: flex-start;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      align-items: flex-start;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      align-items: flex-start;\n    }\n  } @else {\n    @warn \"top mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin middle($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    align-items: center;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      align-items: center;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      align-items: center;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      align-items: center;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      align-items: center;\n    }\n  } @else {\n    @warn \"middle mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin bottom($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    align-items: flex-end;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      align-items: flex-end;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      align-items: flex-end;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      align-items: flex-end;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      align-items: flex-end;\n    }\n  } @else {\n    @warn \"bottom mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin around($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: space-around;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: space-around;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: space-around;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: space-around;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: space-around;\n    }\n  } @else {\n    @warn \"around mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin between($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: space-between;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: space-between;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: space-between;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: space-between;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: space-between;\n    }\n  } @else {\n    @warn \"between mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin first($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    order: -1;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      order: -1;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      order: -1;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      order: -1;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      order: -1;\n    }\n  } @else {\n    @warn \"first mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin last($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    order: 1;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      order: 1;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      order: 1;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      order: 1;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      order: 1;\n    }\n  } @else {\n    @warn \"last mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n","// Grid\n$grid-columns: 12 !default; // Set number of columns in the grid\n\n$xs-max: 40rem !default; // Set xs breakpoint's max width\n$sm-max: 64rem !default; // Set sm breakpoint's max width\n$md-max: 90rem !default; // Set md breakpoint's max width\n$lg-max: 120rem !default; // Set lg breakpoint's max width\n\n$gutter: 0.688rem !default; // Set gutter size\n\n$content-well-max-width: 69.375rem !default; // Set the max-width of the content well\n\n$sm-start: ($xs-max + 1); // Generate sm breakpoint's min width\n$md-start: ($sm-max + 1); // Generate md breakpoint's min width\n$lg-start: ($md-max + 1); // Generate lg breakpoint's min width\n$xl-start: ($lg-max + 1); // Generate xl breakpoint's min width\n\n// Breakpoints\n// Create breakpoint range statements to be used in media queries\n$breakpoint-xs-only: \"only screen and (max-width: #{$xs-max})\"; // 0 -> xs-max range\n$breakpoint-sm-up: \"only screen and (min-width: #{$sm-start})\"; // sm-start -> up range\n$breakpoint-sm-only: \"only screen and (min-width: #{$sm-start}) and (max-width: #{$sm-max})\"; // sm-start -> sm-max range\n$breakpoint-md-up: \"only screen and (min-width: #{$md-start})\"; // md-start -> up range\n$breakpoint-md-only: \"only screen and (min-width: #{$md-start}) and (max-width: #{$md-max})\"; // md-start -> md-max range\n$breakpoint-lg-up: \"only screen and (min-width: #{$lg-start})\"; // lg-start -> up range\n$breakpoint-lg-only: \"only screen and (min-width: #{$lg-start}) and (max-width: #{$lg-max})\"; // lg-start -> lg-max range\n$breakpoint-xl-up: \"only screen and (min-width: #{$xl-start})\"; // xl-start -> up range\n\n$breakpoints-all: ($breakpoint-xs-only, $breakpoint-sm-up, $breakpoint-sm-only, $breakpoint-md-up, $breakpoint-md-only, $breakpoint-lg-up, $breakpoint-lg-only, $breakpoint-xl-up);\n$breakpoint-ups: ($breakpoint-sm-up, $breakpoint-md-up, $breakpoint-lg-up, $breakpoint-xl-up);\n$breakpoint-all-prefixes: (\"xs\", \"xs-only\", \"sm\", \"sm-only\", \"md\", \"md-only\", \"lg\", \"lg-only\", \"xl\");\n$breakpoint-up-prefixes: (\"xs\", \"sm\", \"md\", \"lg\", \"xl\");\n","\n.show {\n  display: block !important;\n}\n\n.row.show {\n  display: -webkit-flex !important;\n  display: -ms-flexbox !important;\n  display: flex !important;\n}\n\n.hide {\n  display: none !important;\n}\n\n// Mixin to run inside of for loop - creates visibility classes * Not for developer use *\n@mixin vis-factory($thisPrefix) {\n  .show-#{$thisPrefix} {\n    display: block !important;\n  }\n  .row.show-#{$thisPrefix} {\n    display: -webkit-flex !important;\n    display: -ms-flexbox !important;\n    display: flex !important;\n  }\n  .hide-#{$thisPrefix} {\n    display: none !important;\n  }\n} // Mixin to run inside of for loop - creates visibility classes * Not for developer use *\n\n@for $i from 1 through length($breakpoint-all-prefixes) {\n  $thisPrefix: nth($breakpoint-all-prefixes, $i);\n  @if $thisPrefix == \"xs\" {\n    @include vis-factory($thisPrefix);\n  } @else if $thisPrefix == \"xs-only\" {\n    @media #{$breakpoint-xs-only} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"sm-only\" {\n    @media #{$breakpoint-sm-only} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"md\" {\n    @media #{$breakpoint-md-up} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"md-only\" {\n    @media #{$breakpoint-md-only} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"lg-only\" {\n    @media #{$breakpoint-lg-only} {\n      @include vis-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      @include vis-factory($thisPrefix);\n    }\n  }\n}\n","///\n/// General fonts\n///\n\n$fonts-path : '../../assets/fonts/';\n\n// Calibri\n@font-face {\n  font-family: \"Calibri Light\";\n  src: local('Calibri Light'),\n    url(\"#{$fonts-path}calibri/CalibriLight.woff2\") format(\"woff2\"),\n    url(\"#{$fonts-path}calibri/CalibriLight.woff\") format(\"woff\"),\n    url(\"#{$fonts-path}calibri/CalibriLight.ttf\") format(\"truetype\"),\n    url('#{$fonts-path}calibri/CalibriLight.eot') format('embedded-opentype');\n  font-display: swap;\n  font-weight: 300;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: \"Calibri Regular\";\n  src: local('Calibri Regular'),\n    url(\"#{$fonts-path}calibri/CalibriRegular.woff2\") format(\"woff2\"),\n    url(\"#{$fonts-path}calibri/CalibriRegular.woff\") format(\"woff\"),\n    url(\"#{$fonts-path}calibri/CalibriRegular.ttf\") format(\"truetype\"),\n    url('#{$fonts-path}calibri/CalibriRegular.eot') format('embedded-opentype');\n  font-display: swap;\n  font-weight: 400;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: \"Calibri Bold\";\n  src: local('Calibri Bold'),\n    url(\"#{$fonts-path}calibri/CalibriBold.woff2\") format(\"woff2\"),\n    url(\"#{$fonts-path}calibri/CalibriBold.woff\") format(\"woff\"),\n    url(\"#{$fonts-path}calibri/CalibriBold.ttf\") format(\"truetype\"),\n    url('#{$fonts-path}calibri/CalibriBold.eot') format('embedded-opentype');\n  font-display: swap;\n  font-weight: 700;\n  font-style: normal;\n}\n\n// Scalas Sans\n@font-face {\n  font-family: \"ScalaSans Light\";\n  src: local('ScalaSans Light'),\n    url(\"#{$fonts-path}scalasans/ScalaSansLight.woff2\") format(\"woff2\"),\n    url(\"#{$fonts-path}scalasans/ScalaSansLight.woff\") format(\"woff\"),\n    url(\"#{$fonts-path}scalasans/ScalaSansLight.otf\") format(\"opentype\"),\n    url('#{$fonts-path}scalasans/ScalaSansLight.eot') format('embedded-opentype');\n  font-display: swap;\n  font-weight: 300;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: \"ScalaSans Regular\";\n  src: local('ScalaSans Regular'),\n    url(\"#{$fonts-path}scalasans/ScalaSansRegular.woff2\") format(\"woff2\"),\n    url(\"#{$fonts-path}scalasans/ScalaSansRegular.woff\") format(\"woff\"),\n    url(\"#{$fonts-path}scalasans/ScalaSansRegular.otf\") format(\"opentype\"),\n    url('#{$fonts-path}scalasans/ScalaSansRegular.eot') format('embedded-opentype');\n  font-display: swap;\n  font-weight: 400;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: \"ScalaSans Bold\";\n  src: local('ScalaSans Bold'),\n    url(\"#{$fonts-path}scalasans/ScalaSansBold.woff2\") format(\"woff2\"),\n    url(\"#{$fonts-path}scalasans/ScalaSansBold.woff\") format(\"woff\"),\n    url(\"#{$fonts-path}scalasans/ScalaSansBold.otf\") format(\"opentype\"),\n    url('#{$fonts-path}scalasans/ScalaSansBold.eot') format('embedded-opentype');\n  font-display: swap;\n  font-weight: 700;\n  font-style: normal;\n}\n","//\n// Config here all sass variables\n\n// Paths\n$images-path : '../../assets/img';\n\n// Colors\n$white: #FFFFFF;\n$black: #000000;\n$color1: #3D2E32;\n$color2: #EA3E3C;\n$color3: #FF8800;\n$color4: #191430;\n$color5: #55A6AC;\n\n// RGB/A Colors\n$rgb1: rgba($black, .7);\n$rgb2: rgba($white, .5);\n$rgb3: rgba($black, .15);\n$rgb4: rgba(0, 17, 82, .6);\n$rgb5: rgba(250, 183, 44, .5);\n$rgb6: rgba(0, 0, 0, 0.1);\n\n$shadow1: 0 10px 30px 0 $rgb3;\n$shadow2: 0 8px 30px -2px $rgb6;\n\n// Fonts\n$CalibriRegular: 'Calibri Regular', Arial, 'Sans-sefif';\n$CalibriLight: 'Calibri Light', $CalibriRegular;\n$CalibriBold: 'Calibri Bold', $CalibriRegular;\n$ScalaSansRegular: 'ScalaSans Regular', $CalibriRegular, Arial, 'Sans-sefif';\n$ScalaSansLight: 'ScalaSans Light', $ScalaSansRegular;\n$ScalaSansBold: 'ScalaSans Bold', $ScalaSansRegular;\n\n// Animations\n$transition1: all .3s ease;\n\n// utilities\n$border-radius1: 32px;\n\n// Collections\n$networks: facebook, linkedin, twitter, instagram, youtube;\n\n:root {\n  --base-font-size: 0.875rem;\n\n  @media screen and (min-width: $sm-start) {\n    --base-font-size: 1rem;\n  }\n}\n","///\n/// Mixins\n///\n\n/// Breakpoints\n/// Mayor que $bp\n@mixin from($bp) {\n  @media screen and (min-width: $bp) {\n    @content;\n  }\n}\n\n/// Menor que $bp\n@mixin to($bp) {\n  @media screen and (max-width: $bp) {\n    @content;\n  }\n}\n\n/// Dimensiones\n/// Alto y ancho\n@mixin size($width : auto, $height : auto) {\n  width: $width;\n  height: $height;\n}\n\n/// Mismas dimensiones\n@mixin esize($size) {\n  @include size($size, $size);\n}\n\n/// Font\n/// Text\n@mixin text($fontsize: var(--base-font-size), $lineheight: false, $fontfamily: $CalibriRegular) {\n  font-family: $fontfamily;\n  font-size: $fontsize;\n\n  @if $lineheight {\n    line-height: $lineheight;\n  } @else {\n    line-height: $fontsize;\n  }\n}\n\n/// Accesibility\n/// Hide content\n@mixin visually-hidden {\n  position: absolute !important;\n  padding: 0!important;\n  margin: -1px!important;\n  overflow: hidden!important;\n  clip: rect(0,0,0,0)!important;\n  white-space: nowrap!important;\n  border: 0!important;\n}\n\n/// Form\n/// Reset styles\n@mixin reset-control {\n  border: 0;\n  background-color: initial;\n  color: inherit;\n}\n\n/// Buttons\n@mixin btn-base {\n  appearance: none;\n  align-items: center;\n  border: 0;\n  border-radius: $border-radius1;\n  cursor: pointer;\n  display: inline-flex;\n  font-size: szrem(16);\n  font-family: $CalibriRegular;\n  justify-content: center;\n  text-align: center;\n  padding: 12px 20px;\n  text-decoration: none;\n}\n\n@mixin btn-variant($background, $color, $border) {\n  background-color: $background;\n  color: $color;\n  border-color: $color;\n  fill: $color;\n  transition: $transition1;\n\n  &:hover {\n    background-color: darken($background, 10%);\n    border-color: darken($border, 12%);\n    color: $color;\n  }\n}\n\n@mixin btn-icon($icon, $position, $format: svg) {\n  padding-right: 80px;\n  background-repeat: no-repeat;\n  background-position: $position;\n  background-image: icon($icon, $format);\n}\n\n@mixin header-decoration($color) {\n  position: relative;\n\n  &::after {\n    @include size(30px, 3px);\n    background-color: $color;\n    content: '';\n    display: inline-block;\n    position: absolute;\n    top: -15px;\n    left: 0;\n  }\n}\n","///\n/// General styles for Header\n///\n\n.header {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: 99;\n  background-color: $white;\n  box-shadow: $shadow2;\n\n  a {\n    color: $color1;\n  }\n\n  @include from($sm-start) {\n    padding: $gutter 0;\n  }\n\n  &__wrapper {\n    position: relative;\n  }\n\n  &__left {\n    img {\n      display: block;\n      width: 120px;\n\n      @include from($sm-start) {\n        width: initial;\n      }\n    }\n  }\n\n  &__right {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n\n    .burgermenu {\n      @include size(25px, 20px);\n      @include reset-control;\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n\n      span {\n        @include size(100%, 4px);\n        display: block;\n        background-color: $color1;\n        transition: $transition1;\n      }\n\n      &--open {\n        span {\n          &:nth-child(2) {\n            opacity: 0;\n          }\n\n          &:first-child {\n            transform: rotate(45deg);\n            transform-origin: left;\n          }\n\n          &:last-child {\n            transform: rotate(-45deg);\n            transform-origin: left;\n          }\n        }\n      }\n    }\n  }\n\n  &--transparent {\n    background-color: $rgb1;\n    box-shadow: none;\n\n    @include from($sm-start) {\n      background-color: initial;\n      border-bottom: 1px solid $rgb2;\n    }\n\n    a {\n      color: $white;\n    }\n\n    .header__right {\n      .burgermenu span {\n        @include size(100%, 4px);\n        display: block;\n        background-color: $white;\n        transition: $transition1;\n      }\n    }\n  }\n}\n","///\n/// Main container\n///\n\n.main {\n  min-height: calc(100vh - 463px);\n\n  @include from($sm-start) {\n    min-height: calc(100vh - 294px);\n  }\n\n  .block-title {\n    background-color: $color4;\n    padding: 30px $gutter;\n\n    @include from($sm-start) {\n      padding: 64px $gutter;\n    }\n\n    h1 {\n      @include text(szrem(35), szrem(50), $ScalaSansBold);\n      color: $white;\n\n      @include from($sm-start) {\n        font-size: szrem(45);\n        line-height: szrem(60);\n      }\n    }\n  }\n}\n\n.header {\n  &--white {\n    + .main {\n      margin-top: 55px;\n      min-height: calc(100vh - (55px + 463px));\n\n      @include from($sm-start) {\n        margin-top: 88px;\n        min-height: calc(100vh - (88px + 294px));\n      }\n    }\n  }\n}\n\n","///\n/// Footer styles\n///\n\n.footer {\n  background-color: $color4;\n  color: $white;\n  padding-bottom: 50px;\n\n  &__top {\n    border-bottom: 1px solid $rgb2;\n    padding: $gutter 0;\n\n    @include from($sm-start) {\n      margin-bottom: $gutter;\n    }\n\n    &-left,\n    &-right {\n      display: flex;\n      justify-content: center;\n    }\n\n    &-left {\n      @include from($sm-start) {\n        justify-content: flex-start;\n      }\n\n      img {\n        display: block;\n      }\n    }\n  }\n\n  &__bottom {\n    h4 {\n      margin-bottom: 10px;\n    }\n\n    a {\n      color: $white;\n    }\n\n    &-right a {\n      text-decoration: underline;\n    }\n  }\n\n}\n","///\n/// Styles for menus\n///\n\n.header {\n  &--white .menu {\n    &--main-header {\n      background: $rgb2;\n    }\n  }\n\n  &--transparent .menu {\n    &--main-header {\n      background: $rgb1;\n\n      @include from($sm-start) {\n        background: initial;\n      }\n    }\n  }\n}\n\n.menu {\n\n  // Header menu\n  &--main-header {\n    @include size(calc(100% - 20px));\n    position: absolute;\n    right: 10px;\n    top: 56px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    padding: 40px;\n    gap: 5px;\n    opacity: 0;\n    visibility: hidden;\n    transition: $transition1;\n    transform: scale(.5, .5);\n\n    @include from($sm-start) {\n      @include esize(auto);\n      position: initial;\n      flex-direction: row;\n      padding: 0;\n      gap: 40px;\n      opacity: 1;\n      visibility: visible;\n      transform: initial;\n      background: initial;\n    }\n\n    &.menu--open {\n      opacity: 1;\n      visibility: visible;\n      transform: scale(1, 1);\n    }\n\n    .menu__item {\n      a {\n        font-size: szrem(18);\n        padding: 5px 0;\n        display: block;\n\n        &.link-active {\n          position: relative;\n\n          &::after {\n            @include size(60%, 3px);\n            position: absolute;\n            bottom: 0;\n            left: 50%;\n            transform: translateX(-50%);\n            content: '';\n            display: block;\n            background-color: $color5;\n\n            @include from($sm-start) {\n              @include size(26px, 5px);\n              bottom: -28px;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Networks menu on footer\n  &--networks {\n    display: flex;\n    gap: $gutter;\n\n    @each $network in $networks {\n      .menu__item--#{$network} a {\n        @include esize(38px);\n        background: no-repeat center icon($network);\n        border-radius: 50%;\n        border: 1px solid $rgb2;\n        display: block;\n      }\n    }\n\n    .menu__item--linkedin a {\n      background-size: 18px;\n    }\n  }\n\n  // Menu footer\n  &--main-footer {\n    li {\n      margin-bottom: .5rem;\n    }\n  }\n}\n\n\n","///\n/// Hero slider styles\n///\n.hero {\n\n  &-slider__item {\n    position: relative;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  &__top {\n    @include esize(100%);\n    position: absolute;\n    z-index: -1;\n\n    &::before {\n      @include esize(100%);\n      position: absolute;\n      display: block;\n      content: '';\n      background-image: linear-gradient(to right, $rgb4 0%, $rgb5 97%);\n    }\n\n    img {\n      @include esize(100%);\n      object-fit: cover;\n      mix-blend-mode: multiply;\n    }\n  }\n\n  &__content {\n    padding: 0 $gutter;\n    color: $white;\n\n    &-left {\n      max-width: 500px;\n    }\n\n    &-title {\n      @include text(szrem(55), szrem(60), $ScalaSansBold);\n      @include header-decoration($color3);\n      margin-bottom: 10px;\n    }\n\n    &-description {\n      margin-bottom: 20px;\n    }\n  }\n}\n","///\n/// Styles for slick\n///\n\n.hero-slider {\n  .slick-dots {\n    bottom: 25px;\n    display: flex !important;\n    justify-content: center;\n    gap: $gutter;\n\n    @include from($sm-start) {\n      gap: 20px;\n    }\n\n    li,\n    button {\n      @include esize(20px);\n\n      @include from($sm-start) {\n        @include esize(25px);\n      }\n    }\n\n    button {\n      background-color: transparent;\n      border-radius: 50%;\n      border: 1px solid $white;\n\n      &::before {\n        display: none;\n      }\n    }\n\n    .slick-active button {\n      background-color: $color3;\n    }\n  }\n}\n","///\n/// Buttons\n///\n\n// Base class\n.btn {\n  @include btn-base;\n}\n\n.btn--red {\n  @include btn-variant($color2, $white, $color2);\n  box-shadow: $shadow1;\n}\n\n// Hero cta\n.hero .btn {\n  @include btn-icon(arrow-white-big, calc(100% - 20px) center)\n}\n","///\n/// Loading element\n///\n\n.loading {\n  @include esize(100% !important);\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 999;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  svg {\n    @include esize(64px);\n  }\n}\n"]}